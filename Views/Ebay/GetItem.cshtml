@model Product
@inject Cart cart

@{
	List<string> images = Model.ImageUrls.Split(' ').ToList();
	Layout = "_Layout";
	CartLine? ct = cart
		.Lines
		.Find(cl => cl.Product.ProductId == Model.ProductId);
	int count = 0;
	if (ct != null)
	{
		count = ct.Quantity;
	}
}

<section class="product-store position-relative padding-large">
    <div class="row justify-content-center">
        <!-- Card Section -->
        <div class="col-md-4">
            <div class="card mt-3 border border-grey text-center">
                <img src="@Model.ImageLink" style="width: 100%; height: 35vw; object-fit: cover;" class="card-img-top border border-grey" />
                <div class="card-body">
                    <h5 class="card-title" style="font-size:30px;">
                        @Model.Name
                    </h5>
                    <p class="card-text" style="font-size: 25px;">
                        @Model.Description
                    </p>
                    <p class="card-text" style="font-size: 25px;">
                        Price: @Model.Price.ToString("c", CultureInfo.GetCultureInfo("en-US"))
                    </p>
                    @if (Model.ShippingPrice != -100)
                    {
                        <p class="card-text" style="font-size: 25px;">
                            Shipping: @Model.ShippingPrice.ToString("c", CultureInfo.GetCultureInfo("en-US"))
                        </p>
                    }
               
                    <h3 class="card-text" style="font-size: 25px;">
                        Available: @(Model.Quantity > 0 ? Model.Quantity :  "None")
                    </h3>
                    <a href="@ViewBag.ReturnUrl" class="btn btn-primary">
                        Go Back
                    </a>
                    <form id="addToCartForm" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="ebayProductId" value="@Model.EbayProductId" />
                        <input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()?id=@Model.EbayProductId" />
                        <button @(cart.Lines.Count >= Model.Quantity ? "disabled" : "")  type="submit" id="addToCartButton" class="btn btn-success pull-right mt-2"> 
                            Add To Cart 
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Carousel Section -->
        <div class="col-md-4 mt-3">
            <h3>More images</h3>
            @if (Model.ImageUrls.Length != 0)
            {
                <div id="carouselExampleSlidesOnly" class="carousel slide border border-grey" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @foreach (var image in images)
                        {
                            var isActive = (images.FirstOrDefault() != null && image == images.FirstOrDefault()) ? "active" : ""; // Add active class to the first item
                            @if (image != String.Empty)
                            {
                                <div class="carousel-item @isActive">
                                    <img class="d-block w-100" src="@image.Replace("225.jpg", "500.jpg")">
                                </div>
                            }
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleSlidesOnly" role="button" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon bg-dark rounded-circle p-3" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleSlidesOnly" role="button" data-bs-slide="next">
                        <span class="carousel-control-next-icon bg-dark rounded-circle p-3" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </a>
                </div>
            }
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
<style>
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: black; /* Make the icons more visible */
    }

</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var cartLineCount = @count;
    var availableQuantity = @Model.Quantity;

     function checkCartAndDisableButton() {
        if (cartLineCount >= availableQuantity) {
            $('#addToCartButton').prop('disabled', true); // Disable button
        } else {
            $('#addToCartButton').prop('disabled', false); // Enable button
        }
    }

    checkCartAndDisableButton();
    $(document).ready(function () {
        $('#addToCartButton').on('click', function (e) {
            cartLineCount++;
            checkCartAndDisableButton();
            e.preventDefault();
            
            var formData = $('#addToCartForm').serialize();
            
            $.ajax({
                url: '@Url.Page("/Cart/Cart", "AddToCart")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        window.updateCart(response.totalItems, response.totalValue);
                        $('#cartStatusMessage').text('Item added to cart!').show();
                        $('#cartItemCount').text(response.totalItems); // Update item count display
                        $('#cartTotalValue').text(response.totalValue); // Update total value display
                        setTimeout(function () {
                            $('#cartStatusMessage').fadeOut();
                        }, 3000);
                    } else {
                        $('#cartStatusMessage').text('Failed to add item.').show();
                    }
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        });
    });
</script>

<style>
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: black; /* Make the icons more visible */
    }
</style>
