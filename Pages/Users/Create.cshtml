@page
@model CreateModel

<h5 class="bg-primary text-white p-2">Create User</h5>

<form method="post">
	@Html.AntiForgeryToken()
	<div asp-validation-summary="All" class="text-danger">
	</div>
	<div class="form-group">
		<label>User Name</label>
		<input name="UserName" class="form-control"
			value="@Model.UserName"/>
	</div>
	<div class="form-group">
		<label>Email</label>
		<input name="Email" class="form-control"
			value="@Model.Email"/>
	</div>
	<div class="form-group">
		<label>Password</label>
		<input name="Password" class="form-control"
			value="@Model.Password"/>
	</div>
	<div class="py-2">
		<button type="submit" class="btn btn-primary">
			Submit
		</button>
		<a class="btn btn-secondary" asp-page="list">Back</a>
	</div>
</form>

@functions{
	[Authorize(Roles = "Admins")]
	public class CreateModel : PageModel
	{
		public UserManager<ApplicationUser> UserManager;

		public CreateModel(UserManager<ApplicationUser> userManager)
		{
			UserManager = userManager;
		}

		[BindProperty]
		public string UserName { get; set; } = "";

		[BindProperty]
		[EmailAddress]
		public string Email { get; set; } = "";

		[BindProperty]
		public string Password { get; set; } = "";

		public async Task<IActionResult> OnPostAsync()
		{
			if (ModelState.IsValid)
			{
				ApplicationUser user = new ApplicationUser
				{
					UserName = UserName,
					Email = Email
				};
				IdentityResult result = await UserManager
					.CreateAsync(user, Password);
				if (result.Succeeded)
				{
					return RedirectToPage("List");
				}
				foreach (IdentityError err in result.Errors)
				{
					ModelState.AddModelError("", err.Description);
				}
			}
			return Page();
		}
	}
}
