@page
@model ListModel


<div class="padding-large container">

<table class="table table-sm table-bordered">
	<tr>
		<th>ID</th>
		<th>Name</th>
		<th>Email</th>
	</tr>
	@if (Model.Users.Count() == 0)
	{
		<tr>
			<td colspan="4" class="text-center">No User Accounts</td>
		</tr>
	}
	else
	{
		foreach (ApplicationUser user in Model.Users)
		{
			<tr>
				<td>@user.Id</td>
				<td>@user.UserName</td>
				<td>@user.Email</td>
				<td class="text-center">
					<form asp-page="List" method="post">
						@Html.AntiForgeryToken()
						<input type="hidden" name="Id" value="@user.Id"/>
						<a class="btn btn-sm btn-warning"
							asp-page="Editor" asp-route-id="@user.Id"
							asp-route-mode="edit">
							Edit
						</a>
						<button type="submit"
							class="btn btn-sm btn-danger">
							Delete
						</button>
					</form>
				</td>
				<td></td>
			</tr>
		}
	}
</table>
<a class="btn btn-primary" asp-page="create">Create</a>

</div>

@functions{
	[Authorize(Roles = "Admins")]
	public class ListModel : PageModel
	{
		public UserManager<ApplicationUser> UserManager;
		public ListModel(UserManager<ApplicationUser> userManager)
		{
			UserManager = userManager;
		}

		public IEnumerable<ApplicationUser> Users { get; set; }
			= Enumerable.Empty<ApplicationUser>();
		public void OnGet()
		{
			Users = UserManager.Users;
		}

		public async Task<IActionResult> OnPostAsync(string id)
		{
			ApplicationUser? user = await UserManager.FindByIdAsync(id);
			if (user != null)
			{
				await UserManager.DeleteAsync(user);
			}
			return RedirectToPage();
		}
	}
}
